<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SEUITE 博客</title>
    <link>https://seuite.github.io/</link>
    <description>Recent content on SEUITE 博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 24 Apr 2019 16:07:30 +0800</lastBuildDate>
    
	<atom:link href="https://seuite.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>定理证明程序的复杂性</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%A4%8D%E6%9D%82%E6%80%A7/</link>
      <pubDate>Wed, 24 Apr 2019 16:07:30 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%AE%9A%E7%90%86%E8%AF%81%E6%98%8E%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%A4%8D%E6%9D%82%E6%80%A7/</guid>
      <description>每天一篇计算机 Paper (2019/4/24)</description>
    </item>
    
    <item>
      <title>Unix 分时系统</title>
      <link>https://seuite.github.io/blog/2019-04/unix-%E5%88%86%E6%97%B6%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 23 Apr 2019 16:07:30 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/unix-%E5%88%86%E6%97%B6%E7%B3%BB%E7%BB%9F/</guid>
      <description>每天一篇计算机 Paper (2019/4/23)</description>
    </item>
    
    <item>
      <title>2nd SEUITE 沙龙：初入 Node.js 与 Typescript</title>
      <link>https://seuite.github.io/events/week_9th_seulon/</link>
      <pubDate>Mon, 22 Apr 2019 19:30:00 +0800</pubDate>
      
      <guid>https://seuite.github.io/events/week_9th_seulon/</guid>
      <description>第2次的 Seulon</description>
    </item>
    
    <item>
      <title>一个用于大型共享数据库的数据关系模型</title>
      <link>https://seuite.github.io/blog/2019-04/%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E5%A4%A7%E5%9E%8B%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 22 Apr 2019 19:07:30 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E5%A4%A7%E5%9E%8B%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B/</guid>
      <description>每天一篇计算机 Paper (2019/4/22)</description>
    </item>
    
    <item>
      <title>编程警句 130（31-40）</title>
      <link>https://seuite.github.io/blog/2019-04/%E7%BC%96%E7%A8%8B%E8%AD%A6%E5%8F%A5-13031-40/</link>
      <pubDate>Sun, 21 Apr 2019 23:47:25 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E7%BC%96%E7%A8%8B%E8%AD%A6%E5%8F%A5-13031-40/</guid>
      <description>边笑边哭</description>
    </item>
    
    <item>
      <title>编程警句 130（1-30）</title>
      <link>https://seuite.github.io/blog/2019-04/%E7%BC%96%E7%A8%8B%E8%AD%A6%E5%8F%A5-1301-30/</link>
      <pubDate>Sat, 20 Apr 2019 23:47:25 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E7%BC%96%E7%A8%8B%E8%AD%A6%E5%8F%A5-1301-30/</guid>
      <description>边笑边哭</description>
    </item>
    
    <item>
      <title>FORTH - 一种交互式计算的语言</title>
      <link>https://seuite.github.io/blog/2019-04/forth-%E4%B8%80%E7%A7%8D%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%AE%A1%E7%AE%97%E7%9A%84%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Fri, 19 Apr 2019 13:29:43 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/forth-%E4%B8%80%E7%A7%8D%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%AE%A1%E7%AE%97%E7%9A%84%E8%AF%AD%E8%A8%80/</guid>
      <description>每天一篇计算机 Paper (2019/4/19)</description>
    </item>
    
    <item>
      <title>1st SEUITE 沙龙：从 Markdown 到静态网站生成器</title>
      <link>https://seuite.github.io/events/week_8th_seulon/</link>
      <pubDate>Fri, 19 Apr 2019 08:23:00 +0800</pubDate>
      
      <guid>https://seuite.github.io/events/week_8th_seulon/</guid>
      <description>第1次的 Seulon</description>
    </item>
    
    <item>
      <title>SEUITE第8周报告</title>
      <link>https://seuite.github.io/report/2018-2019-03/week_8th_report/</link>
      <pubDate>Fri, 19 Apr 2019 08:16:34 +0800</pubDate>
      
      <guid>https://seuite.github.io/report/2018-2019-03/week_8th_report/</guid>
      <description>这周摸了个爽！</description>
    </item>
    
    <item>
      <title>无痛理解贝叶斯网络理论</title>
      <link>https://seuite.github.io/blog/2019-04/%E6%97%A0%E7%97%9B%E7%90%86%E8%A7%A3%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C%E7%90%86%E8%AE%BA/</link>
      <pubDate>Thu, 18 Apr 2019 23:29:43 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E6%97%A0%E7%97%9B%E7%90%86%E8%A7%A3%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%BD%91%E7%BB%9C%E7%90%86%E8%AE%BA/</guid>
      <description>每天一篇计算机 Paper (2019/4/18)</description>
    </item>
    
    <item>
      <title>FORTH - 一种交互式计算的语言</title>
      <link>https://seuite.github.io/blog/2019-04/forth-%E4%B8%80%E7%A7%8D%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%AE%A1%E7%AE%97%E7%9A%84%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Wed, 17 Apr 2019 13:29:43 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/forth-%E4%B8%80%E7%A7%8D%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%AE%A1%E7%AE%97%E7%9A%84%E8%AF%AD%E8%A8%80/</guid>
      <description>每天一篇计算机 Paper (2019/4/17)</description>
    </item>
    
    <item>
      <title>计算机程序设计的公理化基础</title>
      <link>https://seuite.github.io/blog/2019-04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%85%AC%E7%90%86%E5%8C%96%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 16 Apr 2019 16:34:40 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%85%AC%E7%90%86%E5%8C%96%E5%9F%BA%E7%A1%80/</guid>
      <description>每天一篇计算机 Paper (2019/4/16)</description>
    </item>
    
    <item>
      <title>一种基于 APL 的机器</title>
      <link>https://seuite.github.io/blog/2019-04/%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E-apl-%E7%9A%84%E6%9C%BA%E5%99%A8/</link>
      <pubDate>Mon, 15 Apr 2019 23:14:40 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E4%B8%80%E7%A7%8D%E5%9F%BA%E4%BA%8E-apl-%E7%9A%84%E6%9C%BA%E5%99%A8/</guid>
      <description>每天一篇计算机 Paper (2019/4/15)</description>
    </item>
    
    <item>
      <title>如何判断自己准备好读研/博了</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E8%87%AA%E5%B7%B1%E5%87%86%E5%A4%87%E5%A5%BD%E8%AF%BB%E7%A0%94/%E5%8D%9A%E4%BA%86/</link>
      <pubDate>Sun, 14 Apr 2019 21:32:22 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E8%87%AA%E5%B7%B1%E5%87%86%E5%A4%87%E5%A5%BD%E8%AF%BB%E7%A0%94/%E5%8D%9A%E4%BA%86/</guid>
      <description>安得课题千万项，大庇天下博士尽欢颜！</description>
    </item>
    
    <item>
      <title>SEUITE第7周报告</title>
      <link>https://seuite.github.io/report/2018-2019-03/week_7th_report/</link>
      <pubDate>Fri, 12 Apr 2019 20:00:00 +0800</pubDate>
      
      <guid>https://seuite.github.io/report/2018-2019-03/week_7th_report/</guid>
      <description>这周摸的快乐！</description>
    </item>
    
    <item>
      <title>双目标进化优化中的生殖偏差，连锁学习和多样性保持</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%8F%8C%E7%9B%AE%E6%A0%87%E8%BF%9B%E5%8C%96%E4%BC%98%E5%8C%96%E4%B8%AD%E7%9A%84%E7%94%9F%E6%AE%96%E5%81%8F%E5%B7%AE%E8%BF%9E%E9%94%81%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%A4%9A%E6%A0%B7%E6%80%A7%E4%BF%9D%E6%8C%81/</link>
      <pubDate>Fri, 12 Apr 2019 14:23:01 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%8F%8C%E7%9B%AE%E6%A0%87%E8%BF%9B%E5%8C%96%E4%BC%98%E5%8C%96%E4%B8%AD%E7%9A%84%E7%94%9F%E6%AE%96%E5%81%8F%E5%B7%AE%E8%BF%9E%E9%94%81%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%A4%9A%E6%A0%B7%E6%80%A7%E4%BF%9D%E6%8C%81/</guid>
      <description>每天一篇计算机 Paper (2019/4/11)</description>
    </item>
    
    <item>
      <title>关于偏好的任务分配的分式 0-1 规划</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%85%B3%E4%BA%8E%E5%81%8F%E5%A5%BD%E7%9A%84%E4%BB%BB%E5%8A%A1%E5%88%86%E9%85%8D%E7%9A%84%E5%88%86%E5%BC%8F-0-1-%E8%A7%84%E5%88%92/</link>
      <pubDate>Thu, 11 Apr 2019 09:23:41 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%85%B3%E4%BA%8E%E5%81%8F%E5%A5%BD%E7%9A%84%E4%BB%BB%E5%8A%A1%E5%88%86%E9%85%8D%E7%9A%84%E5%88%86%E5%BC%8F-0-1-%E8%A7%84%E5%88%92/</guid>
      <description>每天一篇计算机 Paper (2019/4/11)</description>
    </item>
    
    <item>
      <title>用于数据挖掘的元启发式方法</title>
      <link>https://seuite.github.io/blog/2019-04/%E7%94%A8%E4%BA%8E%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9A%84%E5%85%83%E5%90%AF%E5%8F%91%E5%BC%8F%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 10 Apr 2019 18:42:14 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E7%94%A8%E4%BA%8E%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9A%84%E5%85%83%E5%90%AF%E5%8F%91%E5%BC%8F%E6%96%B9%E6%B3%95/</guid>
      <description>每天一篇计算机 Paper (2019/4/10)</description>
    </item>
    
    <item>
      <title>再见，多谢博士生涯！（5）</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF5/</link>
      <pubDate>Tue, 09 Apr 2019 14:32:31 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF5/</guid>
      <description>“关于计算机研究生院一开始我想知道，但直到后来才学会的一切。”</description>
    </item>
    
    <item>
      <title>再见，多谢博士生涯！（4）</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF4/</link>
      <pubDate>Mon, 08 Apr 2019 00:23:49 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF4/</guid>
      <description>“关于计算机研究生院一开始我想知道，但直到后来才学会的一切。”</description>
    </item>
    
    <item>
      <title>再见，多谢博士生涯！（3）</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF3/</link>
      <pubDate>Sun, 07 Apr 2019 18:42:14 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF3/</guid>
      <description>“关于计算机研究生院一开始我想知道，但直到后来才学会的一切。”</description>
    </item>
    
    <item>
      <title>再见，多谢博士生涯！（2）</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF2/</link>
      <pubDate>Sat, 06 Apr 2019 22:14:19 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF2/</guid>
      <description>“关于计算机研究生院一开始我想知道，但直到后来才学会的一切。”</description>
    </item>
    
    <item>
      <title>SEUITE第6周报告</title>
      <link>https://seuite.github.io/report/2018-2019-03/week_6th_report/</link>
      <pubDate>Fri, 05 Apr 2019 20:29:37 +0800</pubDate>
      
      <guid>https://seuite.github.io/report/2018-2019-03/week_6th_report/</guid>
      <description>这周没有摸鱼！</description>
    </item>
    
    <item>
      <title>再见，多谢博士生涯！（1）</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF1/</link>
      <pubDate>Fri, 05 Apr 2019 00:14:19 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%86%8D%E8%A7%81%E5%A4%9A%E8%B0%A2%E5%8D%9A%E5%A3%AB%E7%94%9F%E6%B6%AF1/</guid>
      <description>“关于计算机研究生院一开始我想知道，但直到后来才学会的一切。”</description>
    </item>
    
    <item>
      <title>关于论文</title>
      <link>https://seuite.github.io/blog/2019-04/%E5%85%B3%E4%BA%8E%E8%AE%BA%E6%96%87/</link>
      <pubDate>Thu, 04 Apr 2019 23:12:20 +0800</pubDate>
      
      <guid>https://seuite.github.io/blog/2019-04/%E5%85%B3%E4%BA%8E%E8%AE%BA%E6%96%87/</guid>
      <description>不知道怎么写论文？</description>
    </item>
    
    <item>
      <title></title>
      <link>https://seuite.github.io/blog/1-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seuite.github.io/blog/1-01/</guid>
      <description>作者：詹宇 链接：https://www.zhihu.com/question/20013122/answer/44460397 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 Stack Overflow上有人关于这个概念(Pseudo-polynomial time)进行过详细解释。原答案：algorithm - What is pseudopolynomial time? How does it differ from polynomial time?
我大概翻译一下：想要理解“伪多项式时间”，我们需要先给出“多项式时间”的一个清楚的定义。对于“多项式时间”，我们的直观概念是时间复杂度,其中是一常数。比如，选择排序的时间复杂度是，是多项式时间；暴力解决TSP问题的时间复杂度是，不是多项式时间。我们称这种时间复杂度为“传统时间复杂度”。我们通常认为传统时间复杂度中的变量表示数据的输入规模。比如，选择排序中，指待排序数组中元素的个数；TSP问题中表示图中节点的数量。但是，这些所谓的输入规模，仅仅是直观的定义，并不足够严谨。为了标准化这些，在计算标准时间复杂度时，我们给出了输入规模的标准定义：一个问题的输入规模是保存输入数据所需要的bit位数。比如，如果排序算法的输入是一个32-bit整数 数组，那么输入规模就是，是指数组中元素的个数。对于一个带有个节点、条边的图，需要的bit位数就是。了解了输入规模的定义，我们来看“多项式时间”的标准定义：对于一个问题，在输入规模为x的情况下，如果一个算法能够在O()时间内解决此问题，则我们称此算法是多项式时间的，其中为一常数。当我们处理一些图论、链表、数组、树等问题时，这个标准定义下的多项式时间和我们传统的多项式时间相差无几。比如，用选择排序对元素个数为的数组进行排序时，传统时间复杂度为。输入规模，因此，得到的标准时间复杂度是，仍然是多项式时间。类似的，假设在带有个节点、条边的图中做DFS(深度优先搜索)，传统时间复杂度为。数据规模，因此，标准时间复杂度是，仍是多项式时间的。然而，当我们处理一些与数论有关的问题时，事情就不太乐观了。现在我们来讨论判断一个整数是否为素数的算法，下面是一个简单的算法： function isPrime(n): for i from 2 to n - 1: if (n mod i) = 0, return false return true 显然，这个算法在传统时间复杂度计算方法中是多项式时间的。我们不妨认为它的传统时间复杂度是。然后我们再来分析这个问题的输入规模，可能有的同学会说，对于32-bit整数，这个输入规模不就是32吗？这话虽然没错，但是因为在这个问题中，输入规模完全依赖于的大小，所以的范围不再限制在32-bit整数的范围内，而是要探讨当更大时对数据规模的影响。我们知道，保存一个整数所需要的bit位数，因此，在标准的时间复杂度中，此算法的复杂度变为了!这已经不再是多项式时间，而是一个指数时间。我们可以从下面这个例子中直观感受一下这种指数时间的增长速度：对于一个二进制串：10001010101011我们记指数时间复杂度算法运行时间为T。然后，我们在二进制串后面仅仅增加一位：100010101010111这时，算法运行时间会变为2T(至少)！因此，我们仅仅增加几个bit 就会使得算法运行时间成倍成倍的增长。&amp;hellip; &amp;hellip;最后我们来说伪多项式时间的定义：如果一个算法的传统时间复杂度是多项式时间的，而标准时间复杂度不是多项式时间的，则我们称这个算法是伪多项式时间的。除此之外，原回答者还提到了伪多项式时间算法在加密中的应用，多项式时间的素数判断算法等，有兴趣的同学请移步原答案。希望对问题有所帮助。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://seuite.github.io/blog/1-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seuite.github.io/blog/1-01/</guid>
      <description>新的一年，相信你们现在都已经制定了目标，并在考虑如何实现这些目标。如果你的目标之一是在 2019 年学会编程或成为一名 Web 开发人员，那么我今天有一些很棒的东西要与你分享，那就是 2019 年 Web 开发人员路线图。
本文很好地说明了 2019 年如何成为一名 Web 开发人员，并指导你如何在 2019 年学习和掌握 Web 开发。
这是 Web 开发人员学习前端、后端和所有其他内容应该知道的不同路径的集合。你不仅会了解 Web 开发，还会了解对所有程序员都很重要的基本编程内容。
路线图也分为三个部分，第一部分是每个 Web 开发人员都应该知道的通用技能，第二和第三部分分别是关于前端和后端开发，这是 Web 开发的两个主要领域。
你可以学习前端或后端，或者两者都学，这由你决定。如果你想成为一个全堆栈 Web 开发人员，那么你必须同时学习前端和后端，这是不可避免的。
在前端部分中，你也可以选择学习你想要学习的框架，比如 React、Angular 或者 Vue.js，你不需要全部学，只要学你喜欢的就行了。如果你问我的建议，2019 年 Vue.js 是比其他两个更好的选择。
顺便说一句，你以前可能见过这个路线图。这是 Kamranahmedse 编写的关于如何成为一名 Web 开发人员的非常棒、非常直观的指南，并发布在他的 GitHub 存储库中。 2019 年如何成为 Web 开发者
无论如何，你要从这里开始。正如我之前所说，你可以根据自己的兴趣选择下面的前端路径或后端路径。无论如何，那些黄色的建议是你必须学习的，这是每个程序员都应该知道的。
1.Git
最流行的版本控制系统之一。没有 Git 再也无法生存。 2.SSH
它允许你远程登录到另一台主机，这是另一个流行的、每个 Web 开发人员都应该知道的网络概念。 3. HTTP/HTTPS
HTTP 协议是 Web 的基础，对于 Web 开发人员来说，必须熟悉 HTTP 和 HTTPS。 4. 终端的基本用法：Linux 命令行基础
不仅仅是 Web 开发人员，对于任何程序员来说，Linux 命令行都是非常非常重要的，我强烈建议你花一些时间来学习它们。 5. 数据结构和算法
这是任何程序的构建块，更好地了解算法和数据结构是你在下一份工作或当前工作中做得更好的关键。
如果你对学习算法和数据结构感兴趣，我建议你选择你所了解的编程语言的课程。 6. 字符编码
如果你正在创建全球应用程序，其中显示了世界上许多不同语言的信息，那么你应该精通字符编码。它本质上是告诉浏览器如何显示你的数据。 7. GitHub
毫无疑问，每个程序员都应该了解 Git 和 Github，因为它们是版本控制和代码库方面的标准。 2019 年前端开发路线图
如果你想在 2019 年成为前端开发者，那么你应该遵循下面的前端开发路线图。你应该把注意力集中在黄色的方框上，这些方框是你需要学习和关注的最重要的内容。
https://github.com/kamranahmedse/developer-roadmap/blob/master/images/frontend.png
1.Web 开发基础
显然，如果你想成为一名 Web 开发人员，那么你应该了解互联网、Web 应用程序、HTTP 之类的协议以及 Web 开发的基础知识。 2.HTML 和 CSS
HTML 和 CSS 是任何网站的基础。HTML 提供了结构，而 CSS 提供了样式，使它们看起来更好看，更具有视觉吸引力。如果你想成为一个真正的前端开发人员，那么你必须掌握这两方面的知识。 3.JavaScript
就像面向对象编程的四大支柱（抽象、封装、多态和继承）一样，Web 开发也有三大支柱，即 HTML、CSS 和 JavaScript。 前两个提供了结构和样式，但正是 JavaScript 通过添加交互性使它们变得有生气。 4.TypeScript
就像我们有 C 和 C++ 一样，TypeScript 可以看成是 JavaScript++，尽管它不像 C++ 那么流行。
TypeScript 的好处在于它在 JavaScript 代码中增加了类型安全，这意味着你可以在开发阶段捕获与 JavaScript 类型相关的错误。
它还使得为 JavaScript 开发面向对象代码变得更容易。 5.Angular
人们使用纯 HTML、CSS 和 JavaScript 构建网站的日子已经一去不复返了。如今，大部分工作都是由 Angular、React JS 或 Vue.js 这样的框架完成的。
它们不仅提供了存储代码的结构，而且使快速开发 Web 应用程序变得很容易。
Angular 由谷歌支持，因此，学习 Angular 对于任何现代 Web 开发人员来说都是一个不错的选择。
6.React JS
与 Angular 类似，React 也是开发 Web 应用程序的一个流行库。它允许你编写可重用的组件，然后你可以使用这些组件创建现代风格的交互式 Web 页面。
就像 Angular 由谷歌支持一样，React 也有 Facebook 支持，因此非常受欢迎。 7.Vue.js
Vue 或 Vue JS 在去年真的加快了步伐，越来越多的人推荐和使用 Vue.js。我仍然是 Vue 的初学者，可能需要一些时间来学习并迁移到基于 Vue 的应用程序中。
关于前端开发者应该学哪些内容，强烈推荐大家去读这篇文章，里面有非常详细的前端开发者学习指南：https://frontendmasters.com/books/front-end-handbook/2019/ 2019 年后端开发路线图
如果你想在 2019 年成为后端开发人员，那么你可以遵循这个后端开发路线图。同样，你可以从黄色框开始学习那些你需要重点掌握的关键技术。
https://github.com/kamranahmedse/developer-roadmap/blob/master/images/backend.png
1.Node.js
开发 Web 应用程序的后端有很多选择，例如可以使用 Java 和 Spring，或者 Python + Django，但是最近几年，Node.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://seuite.github.io/blog/1-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seuite.github.io/blog/1-01/</guid>
      <description>41
  Some programming languages manage to absorb change, but withstand progress.
一些编程语言试图接受变化，却拒绝进步。
42
  You can measure a programmer&amp;rsquo;s perspective by noting his attitude on the continuing vitality of FORTRAN.
通过程序员对延续FORTRAN的态度判断他的观点。
43
  In software systems it is often the early bird that makes the worm.
软件系统中，早起的鸟儿，造虫子。
44
  Sometimes I think the only universal in the computing field is the fetch-execute-cycle.
有时，我想计算领域唯一通用的就是“取址-执行”循环。
45
  The goal of computation is the emulation of our synthetic abilities, not the understanding of our analytic ones.
计算的目标是对综合能力的模拟，而不是对分析能力的理解。
.. glossary:
`Analytic–synthetic distinction &amp;lt;http://en.wikipedia.org/wiki/Analytic%E2%80%93synthetic_distinction, http://plato.stanford.edu/entries/analytic-synthetic/&amp;gt;`_ The analytic–synthetic distinction (also called the analytic–synthetic dichotomy) is a conceptual distinction, used primarily in philosophy to distinguish propositions (in particular, statements that are affirmative subject–predicate judgments) into two types: analytic propositions and synthetic propositions. Analytic propositions are true by virtue of their meaning, while synthetic propositions are true by how their meaning relates to the world. 分析-综合二分是一种概念区分，主要在哲学上用以将命题（更具体的，是肯定的主谓判断陈述）分为两类：分析命题和综合命题。 分析命题靠其自身的意义为真。(e.g. 人皆会死) 综合命题靠其自身的意义与世界的关系为真。（e.g. Python是最受欢迎的语言）  46
  Like punning, programming is a play on words.
编程是文字的游戏，犹如双关。
47
  As Will Rogers would have said, &amp;ldquo;There is no such thing as a free variable.”
威尔·罗杰斯可能会说“世上无自由变量。”
吐槽:
这句话原型应该是:
 In the early days of the Indian Territory, there were no such things as birth certificates.</description>
    </item>
    
    <item>
      <title>越糟糕越好：简单之美 (Worse Is Better)</title>
      <link>https://seuite.github.io/blog/1-01/%E8%B6%8A%E7%B3%9F%E7%B3%95%E8%B6%8A%E5%A5%BD%E7%AE%80%E5%8D%95%E4%B9%8B%E7%BE%8E-worse-is-better/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seuite.github.io/blog/1-01/%E8%B6%8A%E7%B3%9F%E7%B3%95%E8%B6%8A%E5%A5%BD%E7%AE%80%E5%8D%95%E4%B9%8B%E7%BE%8E-worse-is-better/</guid>
      <description>简单压倒一切</description>
    </item>
    
  </channel>
</rss>